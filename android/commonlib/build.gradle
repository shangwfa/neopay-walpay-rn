apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility rootProject.ext.android["JavaVersion"]
        sourceCompatibility rootProject.ext.android["JavaVersion"]
    }
    dataBinding {
        enabled true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.dependencies["appcompatv7"]
    compile rootProject.ext.dependencies["supportdesign"]
    compile rootProject.ext.dependencies["recyclerviewv7"]
    compile rootProject.ext.dependencies["cardview"]
    compile rootProject.ext.dependencies["constraint_layout"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["pickerview"]
    compile rootProject.ext.dependencies["mock_api"]
    compile rootProject.ext.dependencies["multidex"]
    //    compile rootProject.ext.dependencies["bugly_crashreport"]
    compile rootProject.ext.dependencies["bugly_update"]
    compile rootProject.ext.dependencies["bugly_nativecrashreport"]
    compile rootProject.ext.dependencies["ucrop"]
    compile rootProject.ext.dependencies["glide_transformations"]
    compile rootProject.ext.dependencies["arouterapi"]
    annotationProcessor rootProject.ext.dependencies["aroutercompiler"]
    compile rootProject.ext.dependencies["adapter_rxjava"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["barlibrary"]
    compile rootProject.ext.dependencies["rxpermission"]
    compile rootProject.ext.dependencies["okhttp3"]
    compile rootProject.ext.dependencies["retrofit2"]
    compile rootProject.ext.dependencies["converter_gson"]
    compile rootProject.ext.dependencies["gifview"]
    compile rootProject.ext.dependencies["flexbox"]
    compile rootProject.ext.dependencies["one_push_core"]
    compile rootProject.ext.dependencies["one_push_huawei"]
    compile rootProject.ext.dependencies["one_push_xiaomi"]
    compile rootProject.ext.dependencies["agentweb"]
    compile rootProject.ext.dependencies["nineoldandroids"]
    compile 'com.facebook.react:react-native:+'
    //    compile files('libs/zxing.jar')
    compile files('libs/aliyun-oss-sdk-android-2.3.0.jar')
    compile project(':react-native-camera')
}
repositories {
    mavenCentral()
}

